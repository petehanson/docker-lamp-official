#!/usr/bin/env bash

source ./environment.cfg

# docker-compose command
COMPOSE="docker-compose"

# working director
WORKINGDIR="/var/www/html"

# If we pass any arguments...
if [ $# -gt 0 ];then

    # If "art" is used, pass-thru to "artisan"
    # inside a new container
    if [ "$1" == "artisan" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $CODEPATH \
            $PHP \
            php artisan "$@"

    # If "composer" is used, pass-thru to "composer"
    # inside a new container
    elif [ "$1" == "composer" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $COMPOSERPATH \
            $COMPOSER \
            "$@"

    # If "test" is used, run unit tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $CODEPATH \
            $PHP \
            ./vendor/bin/phpunit "$@"

    # If "npm" is used, run npm
    # from our node container
    elif [ "$1" == "npm" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $NPMPATH \
            $NODE \
            npm "$@"

    # If "gulp" is used, run gulp
    # from our node container
    elif [ "$1" == "gulp" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $NPMPATH \
            $NODE \
            gulp "$@"

    # If "bower" is used, run bower
    # from our node container
    elif [ "$1" == "bower" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $NPMPATH \
            $NODE \
            bower --allow-root "$@"

    # If "less" is used, run less
    # from our node container
    elif [ "$1" == "less" ] || [ "$1" == "lessc" ]; then
        shift 1
        $COMPOSE run --rm \
            -w $NPMPATH \
            $NODE \
            lessc "$@"


    # If "mysql" is used, run mysql
    # from our mysql container
    elif [ "$1" == "mysql" ]; then
        shift 1
        $COMPOSE exec \
            $DB \
            mysql -u$mysql_root_user -p$mysql_root_password "$@"


    # If "mysqldump" is used, run mysqldump
    # from our mysql container
    elif [ "$1" == "mysqldump" ]; then
        shift 1
        $COMPOSE exec \
            $DB \
            mysqldump -u$mysql_root_user -p$mysql_root_password "$@"

	# Put in a command for redis-cli here


    # Else, pass-thru args to docker-compose
    else
        $COMPOSE "$@"
    fi

else
    $COMPOSE ps
fi
